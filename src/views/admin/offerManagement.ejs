<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>KartFy Dashboard</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge" />
    <meta name="description" content="" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta property="og:title" content="" />
    <meta property="og:type" content="" />
    <meta property="og:url" content="" />
    <meta property="og:image" content="" />
    <!-- Favicon -->
    <link
      rel="shortcut icon"
      type="image/x-icon"
      href="/assets/imgs/theme/favicon.svg"
    />
    <!-- Template CSS -->
    <link href="/assets/css/main.css?v=1.1" rel="stylesheet" type="text/css" />
  </head>

  <body>
    <%- include('../partials/sidenav.ejs') -%>
    <main class="main-wrap">
      <!-- Modal -->
      






      <div
        class="modal fade"
        id="exampleModal3"
        tabindex="-1"
        aria-labelledby="exampleModalLabel"
        aria-hidden="true"
      >
        <div class="modal-dialog modal-lg">
          <div class="modal-content">
            <div class="modal-header">
              <h1 class="modal-title fs-5" id="exampleModalLabel">
                Create Offer
              </h1>
              <button
                type="button"
                class="btn-close"
                data-bs-dismiss="modal"
                aria-label="Close"
              ></button>
            </div>
            <div class="modal-body">
              <form action="/api/v1/admin/offers/create-offer" method="post">
                <label for="form-label">Name</label>
                <input style="visibility: hidden;" type="text" name="id" id="couponId">
                <input
                  type="text"
                  id="name"
                  name="name"
                  placeholder="Enter coupon name"
                  class="form-control my-2"
                />
                <label for="form-label">Description</label>
                <input
                  type="text"
                  id="description"
                  name="description"
                  placeholder="Enter Description here"
                  class="form-control my-2"
                />

                <label for="form-label">Dicount Percentage</label>
                <input
                  type="text"
                  id="discount"
                  name="discount"
                  placeholder="Enter in % "
                  class="form-control my-2"
                />


                

                <label for="form-label">Choose offer type</label>
                <select class="form-select my-2" id="offertype"
                name="offertype">
                <option selected> Offer type</option>
                <option value="category">Category </option>
                <option value="product">Product</option>

               </select>

                

                <label for="form-label">End date</label>
                <input
                  type="date"
                  name="edate"
                  id="edate"
                  placeholder="DD-MM-YYYY"
                  class="form-control my-2"
                />

                <div class="form-group my-3">
                  <div class="input-group my-3">
                      <div class="input-group-prepend">
                          <label class="form-label  input-group-text" for="inputGroupSelect01">Selected Items</label>
                      </div>
                      <select class="form-select" multiple id="selecteditems"
                          name="selecteditems[]">


                      </select>
                  </div>
              </div>

                
                <div class="modal-footer justify-content-between ">
                  <button
                    type="button"
                    class="btn btn-secondary mx-5"
                    data-bs-dismiss="modal"
                  >
                    Close
                  </button>
                  <button type="submit" class="btn btn-primary mx-5">
                    Submit
                  </button>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>


      <!--   product modal  -->
      <div class="modal fade" id="productModal" tabindex="-1"
      aria-labelledby="productModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-dialog-scrollable">
          <div class="modal-content">
              <div class="modal-header">
                  <h5 class="modal-title" id="productModalLabel">
                      Select a Product</h5>
                  <button type="button" class="btn-close"
                      data-bs-dismiss="modal"
                      aria-label="Close"></button>
              </div>
              <div class="modal-body" id="modalProductList">
                  <!-- product will be dynamically inserted here -->
              </div>
              <div class="modal-footer">
                  <button type="button" class="btn btn-secondary"
                      data-bs-dismiss="modal">Close</button>
                  <button type="button" class="btn btn-primary"
                      id="selectProductBtn">Select</button>
              </div>
          </div>
      </div>
  </div>


  <!-- category modal -->
  <div class="modal fade" id="categoryModal" tabindex="-1"
      aria-labelledby="categoryModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-dialog-scrollable">
          <div class="modal-content">
              <div class="modal-header">
                  <h5 class="modal-title" id="categoryModalLabel">
                      Select Categories</h5>
                  <button type="button" class="btn-close"
                      data-bs-dismiss="modal"
                      aria-label="Close"></button>
              </div>
              <div class="modal-body" id="modalCategoryList">
                  <!-- Categories will be dynamically inserted here -->
              </div>
              <div class="modal-footer">
                  <button type="button" class="btn btn-secondary"
                      data-bs-dismiss="modal">Close</button>
                  <button type="button" class="btn btn-primary"
                      id="selectCategoryBtn">Select</button>
              </div>
          </div>
      </div>
  </div>




      <!-- edit coupon modal -->
      <div
        class="modal fade"
        id="exampleModal2"
        tabindex="-1"
        aria-labelledby="exampleModalLabel"
        aria-hidden="true"
      >
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h1 class="modal-title fs-5" id="exampleModalLabel">
                Edit Offer
              </h1>
              <button
                type="button"
                class="btn-close"
                data-bs-dismiss="modal"
                aria-label="Close"
              ></button>
            </div>
            <div class="modal-body">
              <form action="/api/v1/admin/offers/edit-offer" method="post">                  <label for="form-label">Name</label>
                  <input style="visibility: hidden;" type="text" name="id" id="couponId1">
                  <input
                    type="text"
                    id="name1"
                    name="name"
                    placeholder="Enter coupon name"
                    class="form-control my-2"
                  />
                  <label for="form-label">Description</label>
                  <input
                    type="text"
                    id="description1"
                    name="description"
                    placeholder="Enter Description here"
                    class="form-control my-2"
                  />
  
                  <label for="form-label">Dicount Percentage</label>
                  <input
                    type="text"
                    id="discount1"
                    name="discount"
                    placeholder="Enter in % "
                    class="form-control my-2"
                  />
  
  
                  
  
                  <!-- <label for="form-label">Choose offer type</label>
                  <select class="form-select my-2" id="offertype1"
                  name="offertype">
                  <option selected> Offer type</option>
                  <option value="category">Category </option>
                  <option value="product">Product</option>
  
                 </select> -->
  
                  
  
                  <label for="form-label">End date</label>
                  <input
                    type="date"
                    name="edate"
                    id="edate1"
                    placeholder="DD-MM-YYYY"
                    class="form-control my-2"
                  />
  
                  <!-- <div class="form-group my-3">
                    <div class="input-group my-3">
                        <div class="input-group-prepend">
                            <label class="form-label  input-group-text" for="inputGroupSelect01">Selected Items</label>
                        </div>
                        <select class="form-select" multiple id="selecteditems"
                            name="selecteditems[]">
  
  
                        </select>
                    </div>
                </div> -->
  
                  
                  <div class="modal-footer justify-content-between ">
                    <button
                      type="button"
                      class="btn btn-secondary mx-5"
                      data-bs-dismiss="modal"
                    >
                      Close
                    </button>
                    <button type="submit" class="btn btn-primary mx-5">
                      Submit
                    </button>
                  </div>
              </form>
            </div>
          </div>
        </div>
      </div>
      <section class="content-main">
        <div class="content-header">
          <h2 class="content-title">Manage Offer</h2>
         
          <div>
            <button
              href="#"
              class="btn btn-dark"
              data-bs-toggle="modal"
              data-bs-target="#exampleModal3"
            >
              <i class="material-icons md-plus"></i> Create Offer
            </button>
          </div>
        </div>
        <div class="card mb-4">
          <!-- card-header end// -->
          <div class="card-body">
            <div class="table-responsive" id="Reload">
              <table class="table table-hover">
                <thead>
                  <tr>
                    <th>Name</th>
                    <th>Coupon code</th>

                    <th>Activation date</th>
                    <th>Expire date</th>
                    <th>Discount </th>
                    <th class="text-center">Images</th>
                    <th class="text-end">Action</th>
                  </tr>
                </thead>
                <tbody >
                  <% if(Array.isArray(offers) && offers.length> 0) {%> <%
                  offers.map((c)=> {%>
                  <tr>
                    <td class="col-1"><%= c.title%></td>
                    <td class="col-2"><%= c.description%></td>
                    <% const formattedDate =
                    c.createdAt?.toLocaleString('en-US', { weekday: 'short',
                    month: 'short', day: 'numeric', year: 'numeric',  }); %>
                    <td class="col-1"><%= formattedDate%></td>
                    <% const fDate =
                    c.endDate?.toLocaleString('en-US', { weekday: 'short',
                    month: 'short', day: 'numeric', year: 'numeric', }); %>
                    <td class="col-1"><%= fDate%></td>
                    <td class="col-1"><%= c.discount%>%</td>
                    <td class="col">
                      <a href="#" class="itemside">
                        <%if(c.productIds.length != 0){%>
                          <%c.productIds.forEach(product => {%>
                            <!-- <a href="api/v1/admin/products/product-detail?id=<%=product._id%>"></a> -->
                            <div class="float-left p-2">                
                              <img src="/Data/uploads/<%=product.images[0]%>"
                            class="img-sm m-2"
                            alt="pic"
                            
                          />
                          <small style="font-size: 10px; margin: 0; padding: 0;" class=""><%=product.title%></small>
                        </div>

                        <%})%>  
                      <%}else{%>
                        <ul style="list-style: none;">
                          <%c.appliedCategory.forEach(category => {%>

                          <li><%=category%></li>
                          <%})%>
                        </ul>

                        <%}%>        
                         
                         
                       
                      </a>
                    </td>

                    <td class="text-center col-2" >
                      <button
                        id="button"
                        class="btn btn-md btn-offset-primary rounded font-sm mt-15"
                        data-user-id=""
                        data-status=""
                        onclick="listOrUnlist('<%= c._id%>')"
                      >
                        <%= c.isListed ? "Unlist" : "List" %>
                      </button>
                      <button
                        id="button"
                        class="btn btn-md btn-primary rounded font-sm mt-15"
                        data-user-id=""
                        onclick="return editCoupon('<%= c._id%>', '<%= c.title%>', '<%= c.description%>', '<%= c.endDate%>', '<%= c.discount%>' )"
                        data-status=""
                        data-bs-toggle="modal"
                        data-bs-target="#exampleModal2"
                      >
                        Edit
                      </button>
                    </td>
                  </tr>

                  <% }) %> <% }else{ %>
                  <tr>
                    <td colspan="6">No coupon found</td>
                  </tr>
                  <% } %>
                </tbody>
              </table>
              <!-- table-responsive.// -->
            </div>
          </div>
          <!-- card-body end// -->
        </div>
        <!-- card end// -->
        <div class="pagination-area mt-15 mb-50">
          <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-center">
              <%if(page != 0) {%>
              <a class="page-link" href="?page=<%= page - 1%>"
                ><i class="material-icons md-chevron_left"></i
              ></a>
              <%}%> <% for (let i = 0; i < total; i++) { %> <% if (i ===
              0 || i === total - 1 || (i >= page - 2 && i <= page + 2)) {
              %>
              <li class="page-item <%= page == i ? 'active' : '' %>">
                <a class="page-link" href="?page=<%= i %>"><%= i + 1 %></a>
              </li>
              <% } else if (i === page - 3 || i === page + 3) { %>
              <li class="page-item disabled">
                <span class="page-link">...</span>
              </li>
              <% } %> <% } %> <%if(page != total) {%>
              <a class="page-link" href="?page=<%= page + 1%>"
                ><i class="material-icons md-chevron_right"></i
              ></a>
              <%}%>
            </ul>
          </nav>
        </div>
      </section>
      <!-- content-main end// -->
      <%- include('../partials/adminFooter.ejs') -%>
    </main>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script> 
    <script >
      document.addEventListener( 'DOMContentLoaded', () => {
        document.getElementById('offertype').addEventListener('change', function () {
          const offerType = this.value
          console.log(offerType);
          if(offerType) {
            axios.put('/api/v1/admin/offers/get-offer-data', {offerType} )
            .then(response => {
              console.log(response.data.productData)
              if(response.data.productData) {
                let products = response.data.productData;
                let modalProductList = document.getElementById('modalProductList');
                console.log(modalProductList, 'modla pordu')
                modalProductList.innerHTML = '';

                products.forEach(product => { 
                  console.log(product)

                  let productItem = document.createElement('div');
                  productItem.className = 'product-item d-flex align-items-center justify-content-between p-2';
                  productItem.innerHTML = `
                          <div class="form-check">
                            <input class="form-check-input product-checkbox" type="checkbox" name="productSelect" id="product-${product._id}" value="${product._id}">
                              <label class="form-check-label" for="product-${product._id}">
                                ${product.title} - Price: ${product.price}
                                </label>
                                  </div>
                                  <img class="img-lg" src="/Data/uploads/${product.images[0]}" alt="${product.name}" style="width: 50px; height: 50px;">`;
                        console.log('porductList', productItem)
                      modalProductList.appendChild(productItem);

                });
                $('#productModal').modal('show');
                 


              }else{
                let category = response.data.categoryData
                console.log(category)
                const modalCategoryList = document.getElementById('modalCategoryList');
                modalCategoryList.innerHTML = ''

              category.forEach(category => {
                const categoryElement = document.createElement('div');
                categoryElement.className = 'form-check';
                categoryElement.innerHTML = `
                <input class= "form-check-input category-checkbox" type="checkbox" id="category-${category._ic}" name="category" value="${category._id}">
                <label calss="form-check-label" for="category-${category._id}">${category.title}</label>`
                modalCategoryList.appendChild(categoryElement);
              })
                new bootstrap.Modal(document.getElementById('categoryModal')).show()             
              }
            }).catch(error => console.log(error))




          }
        })

        document.getElementById('selectProductBtn').addEventListener('click', function() {
          let modalInstance = bootstrap.Modal.getInstance(document.getElementById('productModal'));
          modalInstance.hide();

        } )
        document.getElementById('selectCategoryBtn').addEventListener('click', function() {
          let modalInstance = bootstrap.Modal.getInstance(document.getElementById('categoryModal'));
          modalInstance.hide();

        } )



        document.addEventListener('change', function(e) {
        
          if (e.target.matches('.product-checkbox')) {
         
          const selectedProducts = document.querySelectorAll('input[name="productSelect"]:checked');
          const selectedProductNames = document.getElementById('selecteditems');
            console.log(selectedProductNames)
            console.log(selectedProducts)

          if(selectedProductNames) {
            selectedProductNames.innerHTML = '';

            selectedProducts.forEach(input => {
              const productDetails = input.nextElementSibling.textContent.trim().split('-').map(item => item.trim()) ;
              const prdouctName = productDetails[0];
              const productId = input.value;
              const option = document.createElement('option');
              option.value = productId;
              option.text = prdouctName;
              option.selected = true
              selectedProductNames.appendChild(option);
            })
          }
        }
      })
      document.addEventListener('change', function (e) {
                if (e.target.matches('.category-checkbox')) {

                    const selectedProducts = document.querySelectorAll('input[name="category"]:checked');
                    console.log('selectedProducts', selectedProducts);
                    const selectedProductNameSelect = document.getElementById('selecteditems');
                    if (selectedProductNameSelect) {

                        selectedProductNameSelect.innerHTML = '';
                        selectedProducts.forEach(input => {
                            const categoryDetail = input.nextElementSibling.textContent
                            console.log("categoryDetail", categoryDetail);
                            const catName = categoryDetail
                            const catId = input.value;
                            console.log("catId", catId);

                            const option = document.createElement('option');
                            option.value = catName;
                            option.text = catName;
                            option.selected = true;
                            selectedProductNameSelect.appendChild(option);
                        });
                    }
                }
            });

    



      })

     
    </script>
   
    <script src="/assets/js/vendors/jquery-3.6.0.min.js"></script>
    <script src="/assets/js/vendors/bootstrap.bundle.min.js"></script>
    <script src="/assets/js/vendors/select2.min.js"></script>
    <script src="/assets/js/vendors/perfect-scrollbar.js"></script>
    <script src="/assets/js/vendors/jquery.fullscreen.min.js"></script>
    <!-- // sweat alert -->
    <script src="/node_modules/sweetalert2/dist/sweetalert2.all.min.js"></script>
    <!-- Main Script -->
    <script src="/assets/js/main.js?v=1.1" type="text/javascript"></script>
  </body>
</html>

<script>


  function listOrUnlist(id) {
    const data = { id: id };
    
    

    Swal.fire({
      text: "Are you sure",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#3085d6",
      cancelButtonColor: "#d33",
      confirmButtonText: "Yes!",
    }).then((decision) => {
      if (decision.isConfirmed) {
        $.ajax({
          method: "put",
          url: "/api/v1/admin/offers/list-unlist-offer",
          data: JSON.stringify(data),
          contentType: "application/json",
          success: (response) => {
            if (response.success === true) {
              $("#Reload").load("/api/v1/admin/offers #Reload", null, () => {
                Swal.fire({
                  title: `success`,
                  icon: "success",
                  width: '300px',
                  showConfirmButton: false,
                  timer: 1500
                });
              });
            }
          },
        });
      }
    });
  }
</script>
<script>
  function editCoupon(id, name, description, edate, discount, selecteditems) {
    console.log("function is called");
    console.log(edate);

    let date = new Date(edate)
    let year = date.getFullYear();
    let month = String(date.getMonth() + 1).padStart(2, '0');
    let day = String(date.getDate()).padStart(2, '0');
    edate = `${year}-${month}-${day}`
    console.log(`${year}-${month}-${day}`)
        console.log(selecteditems)


    document.getElementById("couponId1").value = id;
    document.getElementById("name1").value = name;
  
    document.getElementById("edate1").value = edate;
    document.getElementById("description1").value = description;
    document.getElementById("discount1").value = discount;

    return;
  }
</script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>



<script>
  document.addEventListener("DOMContentLoaded", function () {
    // Attach validation to the first form
    // attachFormValidation("#exampleModal form");

    // Attach validation to the second form
    attachFormValidation("#exampleModal3 form");

    function attachFormValidation(formSelector) {
      const form = document.querySelector(formSelector);

      form.addEventListener("submit", function (event) {
        // Prevent the form from submitting by default
        event.preventDefault();

        // Remove previous error messages
        clearErrorMessages(form);

        // Perform validation
        const name = form.elements.name.value.trim();
        const edate = form.elements.edate.value;
        const description = form.elements.description.value.trim();
      
        const discount = form.elements.discount.value.trim();
        const selecteditems = form.elements.selecteditems
        // return console.log(selecteditems.selectedOptions)
      
        if (!/^(?=.*\S)[a-zA-Z0-9 ]{3,30}$/.test(name)) {
          displayErrorMessage(form, "name", "Please enter a valid coupon name.");
          return;
        }

       

        if (!/^(?=.*\S)[a-zA-Z0-9 ]{10,30}$/.test(name)) {
          displayErrorMessage(
            form,
            "description",
            "Description must be 10 charectors."
          );
          return;
        }
        
        
        if (isNaN(Number(discount)) || discount.length <= 0 || discount <= 0) {
          displayErrorMessage(
            form,
            "discount",
            "Please enter a valid discount percentage."
          );
          return;
        }
        if(discount > 95){
          displayErrorMessage(
            form,
            "discount",
            "Discount maximum is 95."
          );
          return;

        }
        
        if (selecteditems.selectedOptions.length == 0 ) {
          displayErrorMessage(form, "selecteditems", "Please Select anyThing to apply offer.");
          return;
        }
        
        const dateRegex =/^(?:19|20)\d\d-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$/;
        console.log(edate)


        if (edate.length < 1 || !dateRegex.test(edate)) {
          
          displayErrorMessage(
            form,
            "edate",
            "Invalid date format. Please use dd-mm-yyyy."
          );
          return;

          if(edate < new Date.now()) {
            displayErrorMessage(
            form,
            "edate",
            "End date must be greater than current date."
          );
          return;

          }
        }





       

        // Validate discount amount is a number
        

        // If all validations pass, you can submit the form
        form.submit();
      });
    }




const form = document.querySelector("#exampleModal2 form");

form.addEventListener("submit", function (event) {
  // Prevent the form from submitting by default
  event.preventDefault();

  // Remove previous error messages
  clearErrorMessages(form);
  console.log('comes hree')

  // Perform validation
  const name = form.elements.name.value.trim();
  const edate = form.elements.edate.value;
  const description = form.elements.description.value.trim();

  const discount = form.elements.discount.value.trim();
 
  // return console.log(selecteditems.selectedOptions)

  if (!/^(?=.*\S)[a-zA-Z0-9 ]{3,30}$/.test(name)) {
    displayErrorMessage(form, "name", "Please enter a valid coupon name.");
    return;
  }

 

  if (!/^(?=.*\S)[a-zA-Z0-9 ]{10,30}$/.test(name)) {
    displayErrorMessage(
      form,
      "description",
      "Description must be 10 charectors."
    );
    return;
  }
  
  
  if (isNaN(Number(discount)) || discount.length <= 0 || discount <= 0) {
    displayErrorMessage(
      form,
      "discount",
      "Please enter a valid discount percentage."
    );
    return;
  }
  if(discount > 95){
    displayErrorMessage(
      form,
      "discount",
      "Discount maximum is 95."
    );
    return;

  }
  
  
  
  const dateRegex =/^(?:19|20)\d\d-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$/;
  console.log(edate)


  if (edate.length < 1 || !dateRegex.test(edate)) {
    
    displayErrorMessage(
      form,
      "edate",
      "Invalid date format. Please use dd-mm-yyyy."
    );
    return;

    if(edate < new Date.now()) {
      displayErrorMessage(
      form,
      "edate",
      "End date must be greater than current date."
    );
    return;

    }
  }





 

  // Validate discount amount is a number
  

  // If all validations pass, you can submit the form
  form.submit();
});






    function displayErrorMessage(form, fieldName, message) {
      const field = form.elements[fieldName];
      const errorDiv = document.createElement("div");
      errorDiv.className = "error-message";
      errorDiv.style.color = "red"; // Set color to red
      errorDiv.textContent = message;
      field.parentNode.insertBefore(errorDiv, field);

      // Remove error message after 3000 milliseconds (3 seconds)
      setTimeout(() => {
        errorDiv.remove();
      }, 3000);
    }

    function clearErrorMessages(form) {
      const errorMessages = form.querySelectorAll(".error-message");
      errorMessages.forEach((errorMessage) => {
        errorMessage.remove();
      });
    }
  });
</script>
